// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                    String      @id @default(cuid())
  name                  String?     // @db.VarChar(50)
  surname               String?     // @db.VarChar(50)
  username              String      @unique // @db.VarChar(30)
  email                 String      @unique // @db.VarChar(40)
  password              String      // @db.VarChar(32)
  phone                 String?     // @db.VarChar(15)
  reservationGroups     ReservationGroup[]
}

model Reservation {
  id                    String      @id @default(cuid())
  name                  String      // @db.VarChar()
  date                  DateTime    // @db.Date
  startDate             DateTime    // @db.Date
  endDate               DateTime    // @db.Date
  includeDetergents     Boolean 
  cost                  Decimal     // @db.Money or // @db.Decimal(4,2)
  reservationGroup      ReservationGroup @relation(fields: [reservationGroupId], references: [id])
  reservationGroupId    String      @unique
}

model ReservationGroup {
  id                    String      @id @default(cuid())
  name                  String      // @db.VarChar(50)
  frequency             Int
  user                  User        @relation(fields: [userId], references: [id])
  userId                String      @unique
  reservations          Reservation[]
}

model Residence {
  id                    String      @id @default(cuid())
  areaSize              Decimal     // @db.Money or // @db.Decimal(4,2)
  street                String      // @db.VarChar(40)
  houseNumber           Int
  postCode              String      // @db.VarChar(5)
  city                  String      // @db.VarChar(40)
}

model Service {
  id                    Int         @id @default(autoincrement())
  name                  String      // @db.VarChar(100)
  price                 Decimal     // @db.Money or // @db.Decimal(4,2)
  employees             Employee[]
}

model Employee {
  id                    String       @id @default(cuid())
  name                  String       // @db.VarChar(50)
  surname               String       // @db.VarChar(50)
  email                 String       @unique  // @db.VarChar(40)
  password              String       // @db.VarChar(32)
  availability          DateTime     // here should be the timestamp
  services              Service[]
}